<%= simple_form_for [:admin, @feedback], url: admin_flower_project_flower_feedbacks_path(@feedback), method: :post, wrapper: :admin_form, html: {'data-parsley-validate': true, class: 'feedback_form'} do |f| %>
  <%= f.error_notification %>
  <div class="form-body form-horizontal">
    <%= f.input :school_id, collection: [@project_apply.school].compact.map {|u| [u.name, u.id]}, label: '申请学校：', input_html: {class: 'flower-applies-ajax', data: {'parsley-required': true}} %>

    <%= static_form_control '出财务分类：', "#{@fund.fund_category.name} - #{@fund.name}" %>
    <div class="form-group select optional">
      <label class="col-md-2 control-label">入财务分类：</label>
      <div class="col-sm-9">
        <select id="fund" class="form-control select optional" name="to_fund" required>
          <% FundCategory.sorted.each do |fc| %>
              <optgroup label="<%= fc.name %>">
                <% fc.funds.where.not(id: @fund.id).each do |fund| %>
                    <option value="<%= fund.id %>"%><%= fund.name %></option>
                <% end %>
              </optgroup>
          <% end %>
        </select>
      </div>
    </div>
    <%= f.input :amount, label: '跨分类调整：', autofocus: true, placeholder: '请输入金额', required: true %>
  </div>
  <div class="form-actions">
    <div class="row">
      <div class="col-md-offset-2 col-md-9">
        <%= f.button :submit, '提交', class: 'btn blue' %>
        <%= link_to '取消', admin_flower_project_flower_feedbacks_path(@apply), class: 'btn' %>
      </div>
    </div>
  </div>
<% end %>

<script>
    $(function(){
        // 表单验证
        $(".feedback_form").html5Validate(function(){
            $(this).find('[type="submit"]').attr('disabled','disabled');
            this.submit();
        });

        // 异步加载筹款项目
        $('.applies-ajax').select2({
            language: "zh-CN",
            placeholder: '请选择项目',
            allowClear: true,
            ajax: {
                url: "/selects/applies",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: $.map(data.items, function (item) {
                            return {
                                text: item.name,
                                id: item.id
                            }
                        }),
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            }
        });
    })
</script>
